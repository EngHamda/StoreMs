-- MySQL Script generated by MySQL Workbench
-- 25 فبر, 2017 EET 03:13:15 م
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema StoreMSdb
-- -----------------------------------------------------
-- daily reports , client suggestions, client reviews tables

-- -----------------------------------------------------
-- Schema StoreMSdb
--
-- daily reports , client suggestions, client reviews tables
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `StoreMSdb` DEFAULT CHARACTER SET utf8 ;
USE `StoreMSdb` ;

-- -----------------------------------------------------
-- Table `StoreMSdb`.`store`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`store` (
  `id` INT NOT NULL,
  `store_name` VARCHAR(45) NULL,
  `store_address` VARCHAR(45) NULL,
  `store_website` VARCHAR(45) NULL,
  `store_phone` VARCHAR(45) NULL,
  `store_email` VARCHAR(45) NULL,
  `store_working_days` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Assume store has one branch\nstore (name, address, phone, website, mail,  schedule, about us, users, admins, suppliers, clients, items, items categories)';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`user` (
  `id` INT NOT NULL,
  `user_fname` VARCHAR(45) NULL,
  `user_mname` VARCHAR(45) NULL,
  `user_lname` VARCHAR(45) NULL,
  `user_nid` VARCHAR(45) NULL,
  `user_address` VARCHAR(45) NULL,
  `user_phone` VARCHAR(45) NULL,
  `user_bdate` VARCHAR(45) NULL,
  `user_ppicture` VARCHAR(45) NULL COMMENT 'image\n',
  `user_cv` VARCHAR(45) NULL COMMENT 'file',
  `user_gender` VARCHAR(45) NULL,
  `user_email` VARCHAR(45) NULL,
  `user_passwd` VARCHAR(45) NULL,
  `user_notices` VARCHAR(45) NULL COMMENT 'text()',
  `user_swork` VARCHAR(45) NULL,
  `user_ework` VARCHAR(45) NULL,
  `user_sshift` VARCHAR(45) NULL,
  `user_eshift` VARCHAR(45) NULL,
  `user_isadmin` VARCHAR(45) NULL,
  `store_id` INT NOT NULL,
  PRIMARY KEY (`id`, `store_id`),
  INDEX `fk_user_store1_idx` (`store_id` ASC),
  CONSTRAINT `fk_user_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `StoreMSdb`.`store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'User with these attributes: first name, middle name, last name, national id, address, phone, date of birth, gender,profile picture, email, password, cv, shift time, work time, is_admin, notices ..';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`supplier` (
  `id` INT NOT NULL,
  `supplier_name` VARCHAR(45) NULL,
  `supplier_address` VARCHAR(45) NULL,
  `supplier_phone` VARCHAR(45) NULL,
  `supplier_email` VARCHAR(45) NULL,
  `supplier_notices` VARCHAR(45) NULL,
  `store_id` INT NOT NULL,
  PRIMARY KEY (`id`, `store_id`),
  INDEX `fk_supplier_store1_idx` (`store_id` ASC),
  CONSTRAINT `fk_supplier_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `StoreMSdb`.`store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Supplier with these attributes: name, address, phone,  email, item(name-price), supplier representative(name-phone-notices), notices ...';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`representative`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`representative` (
  `id` INT NOT NULL,
  `representative_name` VARCHAR(45) NULL,
  `representative_phone` VARCHAR(45) NULL,
  `representative_notices` VARCHAR(45) NULL,
  `supplier_id` INT NOT NULL,
  PRIMARY KEY (`id`, `supplier_id`),
  INDEX `fk_representative_supplier_idx` (`supplier_id` ASC),
  CONSTRAINT `fk_representative_supplier`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `StoreMSdb`.`supplier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreMSdb`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`request` (
  `id` INT NOT NULL,
  `representative_id` INT NOT NULL,
  `representative_supplier_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  PRIMARY KEY (`id`, `representative_id`, `representative_supplier_id`, `user_id`, `store_id`),
  INDEX `fk_request_representative1_idx` (`representative_id` ASC, `representative_supplier_id` ASC),
  INDEX `fk_request_user1_idx` (`user_id` ASC),
  INDEX `fk_request_store1_idx` (`store_id` ASC),
  CONSTRAINT `fk_request_representative1`
    FOREIGN KEY (`representative_id` , `representative_supplier_id`)
    REFERENCES `StoreMSdb`.`representative` (`id` , `supplier_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `StoreMSdb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_request_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `StoreMSdb`.`store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'assume one user for each request (create, cancel, receive)\nSuppliers Requests with these attributes: supplier representative, user name, supplier name, items (name-quantity-price) , notices ....';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`client` (
  `id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `client_name` VARCHAR(45) NULL,
  `client_phone` VARCHAR(45) NULL,
  `client_address` VARCHAR(45) NULL,
  `client_email` VARCHAR(45) NULL,
  `client_type` VARCHAR(45) NULL COMMENT 'Permanent client OR New client',
  PRIMARY KEY (`id`, `store_id`),
  INDEX `fk_client_store1_idx` (`store_id` ASC),
  CONSTRAINT `fk_client_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `StoreMSdb`.`store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Clients with these attributes: name, address,phone, mail, its items, number of buying from store, new or old , its review, its complaint, its suggestions.';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`compliant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`compliant` (
  `id` INT NOT NULL,
  `client_id` INT NOT NULL,
  `client_store_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `user_store_id` INT NOT NULL,
  `compliant_cause` VARCHAR(45) NULL COMMENT 'item-user-both',
  `compliant_details` VARCHAR(45) NULL,
  `compliant_solution` VARCHAR(45) NULL,
  `compliant_confirm_solving` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `client_id`, `client_store_id`, `user_id`, `user_store_id`),
  INDEX `fk_compliant_client1_idx` (`client_id` ASC, `client_store_id` ASC),
  INDEX `fk_compliant_user1_idx` (`user_id` ASC, `user_store_id` ASC),
  CONSTRAINT `fk_compliant_client1`
    FOREIGN KEY (`client_id` , `client_store_id`)
    REFERENCES `StoreMSdb`.`client` (`id` , `store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_compliant_user1`
    FOREIGN KEY (`user_id` , `user_store_id`)
    REFERENCES `StoreMSdb`.`user` (`id` , `store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Compliant with these attributes: user name, client name, compliant cause(item-user-both), compliant details, is_solved, confirm solving .....';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`receipt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`receipt` (
  `id` INT NOT NULL,
  `client_id` INT NOT NULL,
  `client_store_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `user_store_id` INT NOT NULL,
  `receipt_date` VARCHAR(45) NULL,
  `receipt_tax` VARCHAR(45) NULL,
  `receipt_discount` VARCHAR(45) NULL,
  `receipt_payment` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `client_id`, `client_store_id`, `user_id`, `user_store_id`),
  INDEX `fk_receipt_client1_idx` (`client_id` ASC, `client_store_id` ASC),
  INDEX `fk_receipt_user1_idx` (`user_id` ASC, `user_store_id` ASC),
  CONSTRAINT `fk_receipt_client1`
    FOREIGN KEY (`client_id` , `client_store_id`)
    REFERENCES `StoreMSdb`.`client` (`id` , `store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_receipt_user1`
    FOREIGN KEY (`user_id` , `user_store_id`)
    REFERENCES `StoreMSdb`.`user` (`id` , `store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Receipt with these attributes: \n	*receipt number,date \n			*user name,store address& phone, website, fb page,..\n			*client data type(new OR cont.) ,name,address, email,... \n			*item details: number, quantity, price\n	*tax, discounts, offers,payment method\n';


-- -----------------------------------------------------
-- Table `StoreMSdb`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreMSdb`.`model`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`model` (
  `id` INT NOT NULL,
  `category_id` INT NOT NULL,
  `model_name` VARCHAR(45) NULL,
  `model_quantity` VARCHAR(45) NULL,
  `supplier_id` INT NOT NULL,
  `request_id` INT NOT NULL,
  `request_representative_id` INT NOT NULL,
  `request_representative_supplier_id` INT NOT NULL,
  `request_user_id` INT NOT NULL,
  `model_request_quantity` VARCHAR(45) NULL,
  `store_id` INT NOT NULL,
  PRIMARY KEY (`id`, `category_id`, `supplier_id`, `request_id`, `request_representative_id`, `request_representative_supplier_id`, `request_user_id`, `store_id`),
  INDEX `fk_model_category1_idx` (`category_id` ASC),
  INDEX `fk_model_supplier1_idx` (`supplier_id` ASC),
  INDEX `fk_model_request1_idx` (`request_id` ASC, `request_representative_id` ASC, `request_representative_supplier_id` ASC, `request_user_id` ASC),
  INDEX `fk_model_store1_idx` (`store_id` ASC),
  CONSTRAINT `fk_model_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `StoreMSdb`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `StoreMSdb`.`supplier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_request1`
    FOREIGN KEY (`request_id` , `request_representative_id` , `request_representative_supplier_id` , `request_user_id`)
    REFERENCES `StoreMSdb`.`request` (`id` , `representative_id` , `representative_supplier_id` , `user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_model_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `StoreMSdb`.`store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `StoreMSdb`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `StoreMSdb`.`item` (
  `id` INT NOT NULL,
  `item_suprice` VARCHAR(45) NULL COMMENT 'supplier price\n',
  `item_stprice` VARCHAR(45) NULL COMMENT 'store price\n',
  `item_status` VARCHAR(45) NULL COMMENT 'has error or not can repair,\nout of stock,avalible',
  `item_issue_date` VARCHAR(45) NULL,
  `item_expiry_date` VARCHAR(45) NULL,
  `item_purchase_date` VARCHAR(45) NULL,
  `item_discount` VARCHAR(45) NULL,
  `model_id` INT NOT NULL,
  `receipt_id` INT NOT NULL,
  `receipt_client_id` INT NOT NULL,
  `receipt_client_store_id` INT NOT NULL,
  `receipt_user_id` INT NOT NULL,
  `receipt_user_store_id` INT NOT NULL,
  PRIMARY KEY (`id`, `model_id`, `receipt_id`, `receipt_client_id`, `receipt_client_store_id`, `receipt_user_id`, `receipt_user_store_id`),
  INDEX `fk_item_model1_idx` (`model_id` ASC),
  INDEX `fk_item_receipt1_idx` (`receipt_id` ASC, `receipt_client_id` ASC, `receipt_client_store_id` ASC, `receipt_user_id` ASC, `receipt_user_store_id` ASC),
  CONSTRAINT `fk_item_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `StoreMSdb`.`model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_receipt1`
    FOREIGN KEY (`receipt_id` , `receipt_client_id` , `receipt_client_store_id` , `receipt_user_id` , `receipt_user_store_id`)
    REFERENCES `StoreMSdb`.`receipt` (`id` , `client_id` , `client_store_id` , `user_id` , `user_store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'item (number, price from supplier , price for client, discount value, state itemdetails(has error or not can repair), product date,expire date,buy date)';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
